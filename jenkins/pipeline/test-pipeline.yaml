apiVersion: v1
kind: BuildConfig
metadata:
  labels:
  name: test-pipeline
spec:
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        pipeline {
            agent {
                label "maven"
            }
            environment {
                GIT_REPO_URL = "https://github.com/leandroberetta/3scale-api-first-journey"
                GIT_REPO_BRANCH = "master"
                API_NAME = "songs"
                API_CONTEXT_DIR = "api"
                API_DEV_NAMESPACE = "api-dev"
                IMAGE_REGISTRY = "image-registry.openshift-image-registry.svc.cluster.local:5000"
            }
            options { 
                skipDefaultCheckout()
                disableConcurrentBuilds()
            }
            stages {                
                stage("Clone") {
                    steps {
                        git(url: "$GIT_REPO_URL", branch: "$GIT_REPO_BRANCH")
                    }
                }                     
                stage("Deploy DEV") {
                    steps {
                        script {
                            openshift.withCluster() {
                                openshift.withProject("$API_DEV_NAMESPACE") {
                                    dir("$API_CONTEXT_DIR") {
                                        newImage = '''
                                            images:
                                              - name: $IMAGE_REGISTRY/$API_DEV_NAMESPACE/$API_NAME
                                                newName: $IMAGE_REGISTRY/$API_DEV_NAMESPACE/$API_NAME
                                                newTag: 1.0.0-$BUILD_NUMBER
                                            '''.stripIndent()
                                        
                                        sh "echo \"$newImage\" >> ./manifests/overlays/dev/kustomization.yaml"

                                        openshift.raw("apply -k ./manifests/overlays/dev")
                                    }
                                }
                            }
                        }
                    }
                }                               
            }    
        }
    type: JenkinsPipeline
